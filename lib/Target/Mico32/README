

This is the Lattice Mico32 backend.

git remotes:
mico32	ssh://login.geekisp.com/home/jpbonn/gitrepos/mico32.git (fetch)
mico32	ssh://login.geekisp.com/home/jpbonn/gitrepos/mico32.git (push)
origin	http://llvm.org/git/llvm.git (fetch)
origin	http://llvm.org/git/llvm.git (push)

To update while in mico32 branch:
# git pull origin master
# git push mico32 mico32


Currently the port only supports the standard Mico32.  For LM32 Baker variant look at ARM Thumb modes for examples of how to implement.  Specifically search for IsThumb1Only and see how ARM handles the instructions.

INSTALLATION

Install llvm-gcc and ensure it works.  See the LLVM Getting Started manual for directions:
http://llvm.org/docs/GettingStarted.html#quickstart

The general project layout will be:
 $TOPDIR
    - llvm
    - build
    - install

Check out the Mico32 LLVM port from the GIT repository: 
??

Assuming you already have llvm-gcc built and installed for the host machine, configure and build Mico32 LLVM as shown below. 
-------------------
#!/bin/sh
#rm -rf $TOPDIR/install
rm -rf $TOPDIR/build
mkdir $TOPDIR/build

(cd $TOPDIR/build ; ../llvm/configure  --with-llvmgccdir=/Users/jpbonn/Documents/llvm/llvm-gcc-4.2-2.7-x86_64-apple-darwin10/bin/x86_64-apple-darwin10-llvm-gcc --enable-debug-runtime --prefix=/Users/jpbonn/Documents/mico32/install/)

(cd $TOPDIR/build ; make install)

(cd $TOPDIR/build ; make check )
-------------------


Notes

Calling conventions
from GCC lm32.c
Return values are returned in a register for all non-aggregate types (long double uses two registers for return value). Aggregate types 32bits or less are returned in a register.
handled

GAS Relocatable Expression Modifiers
http://sourceware.org/binutils/docs/as/LM32_002dModifiers.html#LM32_002dModifiers


lm32.c:lm32_function_arg()
vararg parameters are passed on the stack.

from bfd.h:
/* Lattice Mico32 relocations.  */
  BFD_RELOC_LM32_CALL,
  BFD_RELOC_LM32_BRANCH,
  BFD_RELOC_LM32_16_GOT,
  BFD_RELOC_LM32_GOTOFF_HI16,
  BFD_RELOC_LM32_GOTOFF_LO16,
  BFD_RELOC_LM32_COPY,
  BFD_RELOC_LM32_GLOB_DAT,
  BFD_RELOC_LM32_JMP_SLOT,
  BFD_RELOC_LM32_RELATIVE,

from tc-lm32.c:
bfd_reloc_code_real_type
md_cgen_lookup_reloc (const CGEN_INSN *insn ATTRIBUTE_UNUSED,
		      const CGEN_OPERAND *operand,
		      fixS *fixP ATTRIBUTE_UNUSED)
{
  switch (operand->type)
    {
    case LM32_OPERAND_GOT16:
      return BFD_RELOC_LM32_16_GOT;
    case LM32_OPERAND_GOTOFFHI16:
      return BFD_RELOC_LM32_GOTOFF_HI16;
    case LM32_OPERAND_GOTOFFLO16:
      return BFD_RELOC_LM32_GOTOFF_LO16;
    case LM32_OPERAND_GP16:
      return BFD_RELOC_GPREL16;
    case LM32_OPERAND_LO16:
      return BFD_RELOC_LO16;
    case LM32_OPERAND_HI16:
      return BFD_RELOC_HI16;
    case LM32_OPERAND_BRANCH:
      return BFD_RELOC_LM32_BRANCH;
    case LM32_OPERAND_CALL:
      return BFD_RELOC_LM32_CALL;
    default:
      break;
    }
  return BFD_RELOC_NONE;
}


